# Activating Debug Logging
# log.console = true
# log.console.level = debug

# Allow the guest user to work outside of the looback interface
loopback_users.guest = false

# ==============================================
# Cluster formation
# https://www.rabbitmq.com/cluster-formation.html#peer-discovery-consul
# ==============================================

# Enable consul peer discovery
cluster_formation.peer_discovery_backend = rabbit_peer_discovery_consul

# ==============================================
# consul hostname (docker service name)
# ==============================================
# cluster_formation.consul.host = consul

# When using Docker for Mac, the host.docker.internal DNS name resolves to an IP address
# This also be useful for using inside a Docker Swarm environment as well.
# https://docs.docker.com/docker-for-mac/networking/#use-cases-and-workarounds
cluster_formation.consul.host = {{ env "CONSUL_HTTP_ADDR" }}
cluster_formation.consul.port = {{ env "CONSUL_HTTP_PORT" }}
cluster_formation.consul.scheme = {{ env "CONSUL_HTTP_SCHEME" }}

# consul service name for RabbitMQ
cluster_formation.consul.svc = {{ env "CONSUL_SERVICE_NAME" }}
# Service health check rate (seconds)
cluster_formation.consul.svc_ttl = 30
# how soon should nodes that fail their health checks be unregistered by Consul?
# this value is in seconds and must not be lower than 60 (a Consul requirement)
cluster_formation.consul.deregister_after = 90

# do compute service address
cluster_formation.consul.svc_addr_auto = true
# compute service address using node name
cluster_formation.consul.svc_addr_use_nodename = true
# use long RabbitMQ node names?
cluster_formation.consul.use_longname = true

# Retry peer discovery operations up to ten times
cluster_formation.discovery_retry_limit = 10

# 500 milliseconds
cluster_formation.discovery_retry_interval = 500

# Don't remove cluster members unknown to the peer discovery backend but log
# warnings.
#
# This setting can only be used if a compatible peer discovery plugin is enabled.
cluster_formation.node_cleanup.only_log_warning = true

# Forcefully remove cluster members unknown to the peer discovery backend. Once removed,
# the nodes won't be able to rejoin. Use this mode with great care!
#
# This setting can only be used if a compatible peer discovery plugin is enabled.
cluster_formation.node_cleanup.only_log_warning = false

# perform the check every 90 seconds
cluster_formation.node_cleanup.interval = 90
